---

# == Description
# This pipeline has only two Jobs
# 1. Build and publish artifact(s) to S3 Store
# 2. Deploy it to PWS

jobs:

# Build and publish artifact to S3
- name: job-build-and-publish-artifacts
  serial_groups: [version]
  serial: true
  plan:
  # Clone the Git Repo
  - get: resource-git
    trigger: true
  # Version it
  - get: version
    params: { bump: patch }
  # Build the apps by Gradle
  - get: image-javagradlegitpack
  - task: task-build-artifact
    image: image-javagradlegitpack
    file: resource-git/ci/tasks/build-artifact.yml
    timeout: 10m
  # Publish the *.jar to bucket
  - put: bucket-production-release
    params:
      file: artifact-dir/spring-music*.jar
  # Update the version
  - put: version
    params: {file: version/number}

# Deploy it PWS
- name: job-deploy-to-pws
  serial_groups: [version]
  serial: true
  plan:
  - get: resource-git
    trigger: true
  - get: bucket-production-release
    trigger: true
    passed: [job-build-and-publish-artifacts]
  - put: cf-deploy-production-app
    params:
      manifest: resource-git/manifest.yml
      # This should be the name of the application that this will re-deploy over. 
      # If this is set the resource will perform a zero-downtime deploy.
      current_app_name: ((CURRENT_APP_NAME))
      path: bucket-production-release/spring-music*.jar

##############################################################################

# Resources
resources:
# Custom Image
- name: image-javagradlegitpack
  type: docker-image
  source:
    repository: ((DOCKER_IMAGE))
    insecure_registries: ((DOCKER_INSECURE_REGISTRIES))
    tag: latest

# Git Resource
- name: resource-git
  type: git
  source:
    uri: ((GIT_REPO))
    branch: master

# CF Resource for PROD
- name: cf-deploy-production-app
  type: cf
  source:
    api: ((CF_API))
    username: ((CF_USER))
    password: ((CF_PASSWD))
    organization: ((CF_ORG))
    space: ((CF_SPACE))
    skip_cert_check: true

# S3 bucket for final releases
- name: bucket-production-release
  type: s3
  source:
    bucket: {{S3_BUCKET_RELEASE}}
    regexp: {{S3_PROD_REGEXP}}
    access_key_id: {{S3_ACCESS_KEY_ID}}
    secret_access_key: {{S3_SECRET_ACCESS_KEY}}
    endpoint: {{S3_ENDPOINT}}
    disable_ssl: true

# Semver
- name: version
  type: semver
  source:
    driver: s3
    bucket: {{S3_BUCKET_RELEASE}}
    key: {{S3_VERSION_FILE}}
    access_key_id: {{S3_ACCESS_KEY_ID}}
    secret_access_key: {{S3_SECRET_ACCESS_KEY}}
    endpoint: {{S3_ENDPOINT}}
    disable_ssl: true
    initial_version: 1.0.0